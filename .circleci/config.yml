version: 2.1

orbs:
  aws-s3: circleci/aws-s3@1.0.16
  aws-ecr: circleci/aws-ecr@6.12.2
  awsebcli: sbc-orbs/awsebcli@0.0.3

executors:
  node:
    docker:
      - image: cimg/node:12.18.3
  terraform:
    docker:
      - image: hashicorp/terraform:light
  aws:
    docker:
      - image: circleci/python:3.7.1

commands:
  javascript-setup:
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          keys:
            - npm-deps-{{ checksum "package-lock.json" }}
      - run: npm ci
      - save_cache:
          key: npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
  terraform-setup:
    steps:
      - checkout:
          path: ~/repo
      - run: terraform init

jobs:
  lint-javascript:
    executor: node
    parameters:
      directory:
        default: ""
        type: string
    working_directory: ~/repo/<<parameters.directory>>
    steps:
      - javascript-setup
      - run: npm run lint
  test-javascript:
    executor: node
    parameters:
      directory:
        default: ""
        type: string
    working_directory: ~/repo/<<parameters.directory>>
    steps:
      - javascript-setup
      - run: npm run test
  build-javascript:
    executor: node
    working_directory: ~/repo/client
    steps:
      - javascript-setup
      - run: npm run build
      - persist_to_workspace:
          root: ./
          paths:
            - build
  lint-terraform:
    executor: terraform
    parameters:
      directory:
        default: ""
        type: string
    working_directory: ~/repo/infrastructure/<<parameters.directory>>
    steps:
      - terraform-setup
      - run: terraform fmt
      - run: terraform validate
  plan-terraform:
    executor: terraform
    parameters:
      directory:
        default: ""
        type: string
      plan_name:
        default: ""
        type: string
    working_directory: ~/repo/infrastructure/<<parameters.directory>>
    steps:
      - terraform-setup
      - run: terraform plan -out=./<<parameters.plan_name>>.plan
      - persist_to_workspace:
          root: ./
          paths:
            - <<parameters.plan_name>>.plan
      - store_artifacts:
          path: ./<<parameters.plan_name>>.plan
  apply-terraform:
    executor: terraform
    parameters:
      directory:
        default: ""
        type: string
      plan_name:
        default: ""
        type: string
      vars:
        default: ""
        type: string
    working_directory: ~/repo/infrastructure/<<parameters.directory>>
    steps:
      - terraform-setup
      - attach_workspace:
          at: .
      - run: terraform apply ./<<parameters.plan_name>>.plan <<parameters.vars>>
  deploy-client:
    executor: aws
    working_directory: ~/repo/client
    steps:
      - checkout
      - attach_workspace:
          at: .
      - aws-s3/sync:
          from: ./build
          to: s3://poker-frontend-app
  deploy-server:
    executor: aws
    working_directory: ~/repo
    steps:
      - awsebcli/install
      - awsebcli/configure
      - run: >
          aws elasticbeanstalk update-environment
            --application-name poker-app-ebs-application
            --version-label latest
            --environment-name poker-app-ebs-prod

workflows:
  deploy:
    jobs:
      - lint-javascript:
          name: lint-client-js
          directory: client
          context: AWS Prod
      - test-javascript:
          name: test-client-js
          directory: client
          context: AWS Prod
      - build-javascript:
          name: build-client-js
          context: AWS Prod
      - lint-javascript:
          name: lint-server-js
          directory: server
          context: AWS Prod
      - test-javascript:
          name: test-server-js
          directory: server
          context: AWS Prod
      - lint-terraform:
          name: lint-repo-terraform
          context: AWS Prod
          directory: repo
      - plan-terraform:
          name: plan-repo-terraform
          context: AWS Prod
          directory: repo
          plan_name: repo
      - lint-terraform:
          name: lint-app-terraform
          context: AWS Prod
          directory: app
      - plan-terraform:
          name: plan-app-terraform
          context: AWS Prod
          directory: app
          plan_name: app
      - apply-terraform:
          name: apply-repo-terraform
          context: AWS Prod
          directory: repo
          plan_name: repo
          vars: -var='repo_url=$AWS_ECR_ACCOUNT_URL/poker-app'
          filters:
            branches:
              only: main
          requires:
            - lint-client-js
            - test-client-js
            - build-client-js
            - lint-server-js
            - test-server-js
            - lint-repo-terraform
            - plan-repo-terraform
            - lint-app-terraform
            - plan-app-terraform
      - aws-ecr/build-and-push-image:
          name: build-server-image
          context: AWS Prod
          path: ./server
          repo: poker_app
          tag: latest,$CIRCLE_SHA1
          filters:
            branches:
              only: main
          requires:
            - apply-repo-terraform
      - apply-terraform:
          name: apply-app-terraform
          context: AWS Prod
          directory: app
          plan_name: app
          filters:
            branches:
              only: main
          requires:
            - build-server-image
      - deploy-client:
          context: AWS Prod
          filters:
            branches:
              only: main
          requires:
            - apply-app-terraform
      - deploy-server:
          context: AWS Prod
          filters:
            branches:
              only: main
          requires:
            - apply-app-terraform
